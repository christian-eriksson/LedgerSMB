# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: '*'
  pull_request:
    branches: '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    strategy:
      fail-fast: false
      matrix:
        perl: [ "5.24", "5.28", "5.32" ]
        BROWSER: [ "chrome" ]

    services:
      postgres:
        # Docker Hub image
        image: ledgersmbdev/ledgersmb-dev-postgres
        # Provide the password for postgres
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
        env:
          POSTGRES_PASSWORD: test

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Set host alias (why doesn't Github do it itself)
        run: |
          hostname -i | awk '{printf("%s lsmb\n",$1)}' | sudo tee -a /etc/hosts

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Setup Perl environment
        # You may pin to the exact commit or the version.
        # uses: shogo82148/actions-setup-perl@341aa635c06050493b41d71134eea58bfc5f4018
        uses: shogo82148/actions-setup-perl@v1.8.3
        with:
          # The Perl version to download (if necessary) and use. Example: 5.30.0
          perl-version: ${{ matrix.perl }} # optional, default is 5
          # The distribution of Perl binary.

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.2
        with:
          # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
          node-version: 16

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
 
      - name: Cache cpan modules
        uses: actions/cache@v2.1.3
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: $PERL5LIB
          # An explicit key for restoring and saving the cache
          key: ${{ runner.os }}-cpan-${{ matrix.perl }}-${{ hashFiles('**/{Makefile,Build}.PL') }}
          # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
          restore-keys: ${{ runner.os }}-cpan-${{ matrix.perl }}

      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          submodules: recursive
  
      - name: Starting hub with ${{ matrix.BROWSER }}
        run: |
          docker-compose \
              --file=utils/selenium/docker-compose.yml \
              --file=utils/selenium/docker-compose-${{ matrix.BROWSER }}.yml \
              up \
              --detach \
              --scale ${{ matrix.BROWSER }}=3 \

      - name: Install apt packages
        run: sudo apt-get update && sudo apt-get install -y texlive-latex-recommended texlive-xetex gettext nginx
        env:
          DEBIAN_FRONTEND: noninteractive
  
      - name: install with cpm
        run: |
          cpanm --notest App::cpm
          cpm install -g -v Locale::Codes Locale::Country Locale::Language
          cpm install -g -v --resolver=metacpan --notest --with-develop --feature=starman --feature=latex-pdf-ps --feature=openoffice --feature=xls --feature=edi

      - name: Build JS
        run: |
          npm install uglify-js@">=2.0 <3.0"
          make dojo

      - name: Other preparations
        run: |
          mkdir screens logs
          cp doc/conf/ledgersmb.conf.default ledgersmb.conf

      - name: Starting 'starman'
        run: starman --preload-app --pid starman.pid --workers 2 -Ilib -Iold/lib --port 5762 bin/ledgersmb-server.psgi &

      - name: Starting 'nginx'
        run: |
          sed -e "s#{ROOT}#$PWD#" doc/conf/nginx-travis.conf >/tmp/nginx.conf
          nginx -c /tmp/nginx.conf &

      # Runs a single command using the runners shell
      - name: Run Perl tests
        run: |
          make devtest TESTS="--jobs 2 t/ xt/"
        env:
          PGHOST: localhost
          PGPORT: 5432
          PGUSER: postgres
          PGPASSWORD: test
          LSMB_NEW_DB: lsmb_test
          LSMB_TEST_DB: 1
          REMOTE_SERVER_ADDR: 127.0.0.1
          LSMB_BASE_URL: http://lsmb:5000
          PSGI_BASE_URL: http://lsmb:5762
          BROWSER: ${{ matrix.BROWSER }}

